(load t)

(troll '(d 6) 10)
(troll '(d 36))
(troll '(4 d 36))
(troll '(5 d 7))
(troll '((3 + 2) d (100 / 3)))
(troll '(x := (4 + (d 8)) ; (x + 2)))
(troll '(10 # 2))
(troll '((d 10) # (d 7)))
(troll '(7 # (3 d 4)))
(troll '(sum (4 d 6)))
(troll '({ ((4 + 2) (d 6) (4 d 5)) }))
(troll '({ }))
(troll '(4 < (1 2 5 6)))
(troll '((4 * 2) > (3 (3 * 7) (21 / 2) 3 0 -3)))
(troll '(count ((4 * 2) > (3 (3 * 7) (21 / 2) 3 0 -3))))
(troll '(min ({ (1 3 -2 9 0 1) })))
(troll '(max ({ (1 3 -2 9 0 1) })))
(troll '(least 4 ({ (1 3 -2 9 0 1) })))
(troll '(largest 4 ({ (1 3 -2 9 0 1) })))
(troll '(choose ({ (1 -3 0 3 -2 9 0 1 1) })))
(troll '(y := (d 2) ; (accumulate x := (d 5) while ((x + y) > 4))) 10)

(troll '(count (7 < (8 d 8))) 10)

(troll '(x := (4 d 5) ; (y := (3 # (d 3)) ; (((min x) + (max x))))) 10)